[project]
name = "panhumanpy"
version = "0.1.0"
description = "A Python package for automated cell type annotation using neural networks"
channels = ["conda-forge"]
platforms = ["linux-64"]

# Runtime dependencies - necessary for the package to function
[dependencies]
python = "3.12.8"
pip = "*"
numpy = "1.26.4"
pandas = "2.2.3"
scikit-learn = "1.6.0"
h5py = "3.12.1"
anndata = "0.10.9"
python-dateutil = "*"
umap-learn = "0.5.7"
numba = "0.60.0"
pytest = "8.3.*"



# PyPI dependencies - installed via pip
[pypi-dependencies]
panhumanpy = { path = ".", editable = true }

# Tasks for development workflows
[tasks]
test = "pytest tests/"
lint = "pre-commit run --all-files"
format = { cmd = "black src/ tests/", depends-on = [] }
check = { depends-on = ["test", "lint"] }
build = "python -m build"
docs = "mkdocs serve"

# TensorFlow installation options
tf-auto = """
python -c "
import subprocess, os
try:
    # Check for NVIDIA GPU
    subprocess.run(['nvidia-smi'], check=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    print('GPU detected, installing TensorFlow with CUDA support')
    subprocess.run(['pip', 'install', 'tensorflow[and-cuda]==2.17.0'], check=True)
    subprocess.run(['pip', 'install', 'keras==3.7.0'], check=True)
except (subprocess.SubprocessError, FileNotFoundError):
    print('No GPU detected, installing CPU-only TensorFlow')
    subprocess.run(['pip', 'install', 'tensorflow-cpu==2.17.0'], check=True)
    subprocess.run(['pip', 'install', 'keras'], check=True)
"
"""
tf-cpu = "pip install tensorflow-cpu==2.17.0 keras==3.7.0"
tf-gpu = "pip install tensorflow[and-cuda]==2.17.0 keras==3.7.0"